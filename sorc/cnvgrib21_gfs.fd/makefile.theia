SHELL=/bin/sh
#
SRCS=	gds2gdt.f pds2pdt.f pds2pdtens.f cnvgrib21_gfs.f cnvgfs12.f cnvgfs22.f \
        cnvgfs21.f gdt2gds.f makepds.f putgbexn.f makepdsens.f setbit.f
OBJS=	gds2gdt.o pds2pdt.o pds2pdtens.o cnvgrib21_gfs.o cnvgfs12.o cnvgfs22.o \
        cnvgfs21.o gdt2gds.o makepds.o putgbexn.o makepdsens.o setbit.o

# Tunable parameters
#
# FC		Name of the fortran compiling system to use
# LDFLAGS	Flags to the loader
# LIBS		List of libraries
# CMD		Name of the executable
# PROFLIB	Library needed for profiling
#
FC =		ifort

INC= ${G2_INC4}
LIBS= ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}

CMD =		cnvgrib21_gfs
PROFLIB =	-lprof

# To perform the default compilation, use the first line
# To compile with flowtracing turned on, use the second line
# To compile giving profile additonal information, use the third line
# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
FFLAGS =        -g -O3 -I $(INC) -axCORE-AVX2
#FFLAGS =	 -F
#FFLAGS =	 -Wf"-ez"

# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build a.out.
#
$(phony all):	$(CMD)

$(CMD):		$(OBJS)
	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)

# Make the profiled version of the command and call it a.out.prof
#
$(CMD).prof:	$(OBJS)
	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(PROFLIB) $(LIBS)

install:
	mkdir -p ../../exec
	cp -p $(CMD) ../../exec

clean:
	-rm -f $(OBJS)
	-rm -f $(CMD)

clobber:	clean
	-rm -f $(CMD) $(CMD).prof

void:	clobber
	-rm -f $(SRCS) makefile
