[dir]
# Input and output data directories
PB2NC_INPUT_DIR =  {INPUT_BASE}/grid2obs_step1/data/prepbufr
PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/grid2obs_step1/metplus_output/make_met_data_by_{LOOP_BY}/pb2nc/upper_air/prepbufr
FCST_POINT_STAT_INPUT_DIR = {INPUT_BASE}/grid2obs_step1/data/{MODEL}
OBS_POINT_STAT_INPUT_DIR = {PB2NC_OUTPUT_DIR}
POINT_STAT_OUTPUT_DIR = {OUTPUT_BASE}/grid2obs_step1/metplus_output/make_met_data_by_{LOOP_BY}/point_stat/upper_air/{MODEL}
# Location of configuration files used by MET applications
CONFIG_DIR = {ENV[PARMverif_global]}/metplus_config/metplus_use_cases/METplusV{ENV[METplus_version]}/grid2obs/met_config/metV{ENV[MET_version]}
# Log and temporary directories
LOG_DIR = {OUTPUT_BASE}/grid2obs_step1/metplus_output/logs/{MODEL}
TMP_DIR = /tmp

[config]
LOG_METPLUS = {LOG_DIR}/master_metplus_grid2obs_step1_upper_air_makemetdataby{LOOP_BY}_for{ENV[DATE]}_runon{CLOCK_TIME}.log
METPLUS_CONF = {OUTPUT_BASE}/grid2obs_step1/metplus_output/confs/{MODEL}/master_metplus_grid2obs_step1_upper_air_makemetdataby{LOOP_BY}_for{ENV[DATE]}_runon{CLOCK_TIME}.conf

# Time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = {ENV[make_met_data_by]}
# Format of VALID_BEG and VALID_END
VALID_TIME_FMT = %Y%m%d%H
# Start time for METplus run
VALID_BEG = {ENV[DATE]}{ENV[valid_hr_beg]}
# End time for METplus run
VALID_END = {ENV[DATE]}{ENV[valid_hr_end]}
# Increment between METplus runs in seconds. Must be > 60
VALID_INCREMENT = {ENV[valid_hr_inc]}

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
# specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times
# List of applications to run
PROCESS_LIST = PB2NC, PointStat

# Model/fcst and obs name, e.g. GFS, NAM, GDAS, etc.
MODEL = {ENV[model]}
OBS_NAME = {ENV[prepbufr]}

# List of forecast leads to process
LEAD_SEQ = {ENV[fhr_list]}

# For both pb2nc and point_stat, the obs_window dictionary:
OBS_WINDOW_BEGIN = -2700
OBS_WINDOW_END = 2700

# MET Configuration files for pb2nc and point_stat
PB2NC_CONFIG_FILE = {CONFIG_DIR}/PB2NCConfig_upper_air
POINT_STAT_CONFIG_FILE = {CONFIG_DIR}/PointStatConfig_upper_air

PB2NC_SKIP_IF_OUTPUT_EXISTS = True

# Either upper_air or upper_air
PB2NC_VERTICAL_LOCATION = upper_air

# These are appended with PB2NC to differentiate the GRID, POLY, and MESSAGE_TYPE for point_stat.
PB2NC_GRID =
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE =

# Leave empty to process all
PB2NC_OBS_BUFR_VAR_LIST = QOB, TOB, ZOB, UOB, VOB, D_RH

#***********
# ***NOTE***
#***********
# SET TIME_SUMMARY_FLAG to False. There is a bug in met-6.1.
## For defining the time periods for summarization
# False for no time summary, True otherwise
PB2NC_TIME_SUMMARY_FLAG = False
PB2NC_TIME_SUMMARY_BEG = 000000  ;; start time of time summary in HHMMSS format
PB2NC_TIME_SUMMARY_END = 235959  ;; end time of time summary in HHMMSS format
PB2NC_TIME_SUMMARY_VAR_NAMES = PMO,TOB,TDO,UOB,VOB,PWO,TOCC
PB2NC_TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p80  ;; a list of the statistics to summarize

# Regrid to specified grid.  Indicate NONE if no regridding, or the grid id
# (e.g. G212)
POINT_STAT_REGRID_TO_GRID = {ENV[verif_grid]}

# Verification Masking regions
# Indicate which grid and polygon masking region, if applicable
POINT_STAT_GRID = {ENV[verif_grid]}
# List of full path to poly masking files.  NOTE: Only short lists of poly
# files work (those that fit on one line), a long list will result in an
# environment variable that is too long, resulting in an error.  For long
# lists of poly masking files (i.e. all the mask files in the NCEP_mask
# directory), define these in the MET point_stat configuration file.
POINT_STAT_POLY =
POINT_STAT_STATION_ID =

# Message types, if all message types are to be returned, leave this empty,
# otherwise indicate the message types of interest.
POINT_STAT_MESSAGE_TYPE = {ENV[obtype]}

# Variables and levels as specified in the field dictionary of the MET
# point_stat configuration file. Specify as FCST_VARn_NAME, FCST_VARn_LEVELS,
# (optional) FCST_VARn_OPTION

FCST_VAR1_NAME = TMP
FCST_VAR1_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100, P50, P20, P10

FCST_VAR2_NAME = RH
FCST_VAR2_LEVELS = P1000, P925, P850, P700, P500, P400, P300

FCST_VAR3_NAME = UGRD
FCST_VAR3_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100, P50, P20, P10

FCST_VAR4_NAME = VGRD
FCST_VAR4_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100, P50, P20, P10

FCST_VAR5_NAME = HGT
FCST_VAR5_LEVELS = P1000, P950, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100, P50, P20, P10


[filename_templates]
PB2NC_INPUT_TEMPLATE = prepbufr.{OBS_NAME}.{valid?fmt=%Y%m%d%H}
PB2NC_OUTPUT_TEMPLATE = prepbufr.{OBS_NAME}.{valid?fmt=%Y%m%d%H}.nc

OBS_POINT_STAT_INPUT_TEMPLATE = prepbufr.{OBS_NAME}.{valid?fmt=%Y%m%d%H}.nc
FCST_POINT_STAT_INPUT_TEMPLATE = f{lead?fmt=%HH}.{init?fmt=%Y%m%d%H}

POINT_STAT_OUTPUT_TEMPLATE =
