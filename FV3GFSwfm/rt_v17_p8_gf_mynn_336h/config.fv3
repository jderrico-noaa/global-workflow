#!/bin/ksh -x

########## config.fv3 ##########
# FV3 model resolution specific parameters
# e.g. time-step, processor layout, physics and dynamics parameters
# This config sets default variables for FV3 for a given resolution
# User can over-ride after sourcing this config file

if [ $# -ne 1 ]; then

    echo "Must specify an input resolution argument to set variables!"
    echo "argument can be any one of the following:"
    echo "C48 C96 C192 C384 C768 C1152 C3072"
    exit 1

fi

case_in=$1

echo "BEGIN: config.fv3"


if [[ "$machine" = "WCOSS_DELL_P3" ]]; then
   export npe_node_max=28
elif [[ "$machine" = "WCOSS_C" ]]; then
   export npe_node_max=24
elif [[ "$machine" = "JET" ]]; then
   if [[ "$PARTITION_BATCH" = "xjet" ]]; then
     export npe_node_max=24
   elif [[ "$PARTITION_BATCH" = "vjet" || "$PARTITION_BATCH" = "sjet" ]]; then
     export npe_node_max=16
   elif [[ "$PARTITION_BATCH" = "kjet" ]]; then
     export npe_node_max=40
   fi
elif [[ "$machine" = "HERA" ]]; then
   export npe_node_max=40
elif [[ "$machine" = "ORION" ]]; then
   export npe_node_max=40
fi

# (Standard) Model resolution dependent variables
case $case_in in
    "C48")
        export DELTIM=1200
        export layout_x=3
        export layout_y=2
        export layout_x_gfs=3
        export layout_y_gfs=2
        export nth_fv3=1
        export nth_fv3_gfs=1
        export cdmbgwd="0.071,2.1,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        if [[ "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]]; then export cdmbgwd="1.0,1.0,1.0,1.0"; fi
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=$npe_node_max
        export WRITE_GROUP_GFS=1
        export WRTTASK_PER_GROUP_GFS=$npe_node_max
        export WRTIOBUF="1M"
        ;;
    "C96")
        export DELTIM=450
        export layout_x=6
        export layout_y=4
        export layout_x_gfs=6
        export layout_y_gfs=4
        export nth_fv3=1
        export nth_fv3_gfs=1
        export cdmbgwd="0.14,1.8,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        if [[ "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]]; then export cdmbgwd="1.0,1.0,1.0,1.0"; fi
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=$npe_node_max
        export WRITE_GROUP_GFS=1
        export WRTTASK_PER_GROUP_GFS=$npe_node_max
        export WRTIOBUF="4M"
        export n_split=6
        ;;
    "C192")
        export DELTIM=450
        export layout_x=4
        export layout_y=6
        export layout_x_gfs=4
        export layout_y_gfs=6
        export nth_fv3=2
        export nth_fv3_gfs=2
        export cdmbgwd="0.23,1.5,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        if [[ "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]]; then export cdmbgwd="1.0,1.0,1.0,1.0"; fi
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=$npe_node_max
        export WRITE_GROUP_GFS=2
        export WRTTASK_PER_GROUP_GFS=$npe_node_max
        export WRTIOBUF="8M"
        ;;
    "C384")
        export DELTIM=${DELTIM:-300}
        export layout_x=6
        export layout_y=8
        export layout_x_gfs=${layout_x_gfs:-8}
        export layout_y_gfs=${layout_y_gfs:-12}
        export nth_fv3=2
        export nth_fv3_gfs=${nth_fv3_gfs:-2}
        export cdmbgwd="1.1,0.72,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=1
        export WRTTASK_PER_GROUP=$npe_node_max
        export WRITE_GROUP_GFS=${WRITE_GROUP_GFS:-2}
        export WRTTASK_PER_GROUP_GFS=${WRTTASK_PER_GROUP_GFS:-$npe_node_max}
        export WRTIOBUF=${WRTIOBUF:-"16M"}
        ;;
    "C768")
        if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]] ; then
          if [ $LEVS = "128" ]; then
            export DELTIM=120
          else
            #JKHexport DELTIM=225
            export DELTIM=180
          fi
        else
          if [[ "$CCPP_SUITE" == "FV3_GFS_v16_mynn" ]] ; then
            export DELTIM=100
          else
            export DELTIM=150
          fi
        fi
        export layout_x=8
        export layout_y=12
        export layout_x_gfs=16
        #JKHexport layout_x_gfs=12             ## JKH
        #JKHexport layout_y_gfs=12
        export layout_y_gfs=16             ## JKH
        export nth_fv3=4
        export nth_fv3_gfs=4
        export cdmbgwd="4.0,0.15,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        if [[ "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" ]]; then export cdmbgwd="4.0,0.15,1.0,1.0"; fi 
        if [[ "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]]; then export cdmbgwd="1.0,1.0,1.0,1.0"; fi
        export WRITE_GROUP=2
        export WRTTASK_PER_GROUP=$(echo "2*$npe_node_max" |bc)
        export WRITE_GROUP_GFS=2            ## JKH
        export WRTTASK_PER_GROUP_GFS=$(echo "2*$npe_node_max" |bc)
        export WRTIOBUF="32M"
        ;;
    "C1152")
        export DELTIM=120
        export layout_x=8
        export layout_y=16
        export layout_x_gfs=8
        export layout_y_gfs=16
        export nth_fv3=4
        export nth_fv3_gfs=4
        export cdmbgwd="4.0,0.10,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        if [[ "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]]; then export cdmbgwd="1.0,1.0,1.0,1.0"; fi
        export WRITE_GROUP=4
        export WRTTASK_PER_GROUP=$(echo "2*$npe_node_max" |bc)
        export WRITE_GROUP_GFS=4
        export WRTTASK_PER_GROUP_GFS=$(echo "2*$npe_node_max" |bc)
        export WRTIOBUF="48M"
        ;;
    "C3072")
        export DELTIM=90
        export layout_x=16
        export layout_y=32
        export layout_x_gfs=16
        export layout_y_gfs=32
        export nth_fv3=4
        export nth_fv3_gfs=4
        export cdmbgwd="4.0,0.05,1.0,1.0"  # mountain blocking, ogwd, cgwd, cgwd src scaling
        export WRITE_GROUP=4
        export WRTTASK_PER_GROUP=$(echo "3*$npe_node_max" |bc)
        export WRITE_GROUP_GFS=4
        export WRTTASK_PER_GROUP_GFS=$(echo "3*$npe_node_max" |bc)
        export WRTIOBUF="64M"
        ;;
    *)
        echo "grid $case_in not supported, ABORT!"
        exit 1
        ;;
esac

# Calculate chunksize based on resolution
RESTILE=$(echo $case_in |cut -c2-)
export ichunk2d=$((4*RESTILE))
export jchunk2d=$((2*RESTILE))
export ichunk3d=$((4*RESTILE))
export jchunk3d=$((2*RESTILE))
export kchunk3d=1

# Determine whether to use parallel NetCDF based on resolution
case $case_in in
  "C48" | "C96" | "C192")
    export OUTPUT_FILETYPE_ATM="netcdf_parallel"
    export OUTPUT_FILETYPE_SFC="netcdf"
    ;;
  "C384" | "C768" | "C1152" | "C3072")
    #JKHif [[ "$machine" = "JET" ]]; then
      export OUTPUT_FILETYPE_ATM="netcdf"                  ## JKH
    #JKHelse
     #JKH export OUTPUT_FILETYPE_ATM="netcdf_parallel"
    #JKHfi
    #JKHexport OUTPUT_FILETYPE_SFC="netcdf_parallel"
    export OUTPUT_FILETYPE_SFC="netcdf"
    ;;
esac

echo "END: config.fv3"
