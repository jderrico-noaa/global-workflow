#!/bin/ksh -x

########## config.fcst ##########
# Forecast specific

echo "BEGIN: config.fcst"

# set -eu

# Source model specific information that is resolution dependent
. $EXPDIR/config.fv3 $CASE

# Turn off waves if not used for this CDUMP
case $WAVE_CDUMP in
  both | $CDUMP ) ;; # Don't change
  *) DO_WAVE="NO" ;; # Turn waves off
esac

# Source component configs if necessary
for component in WAVE OCN ICE AERO; do
  control="DO_${component}"
  if [[ $(eval echo \$$control) == "YES" ]]; then
    . $EXPDIR/config.$(echo "$component" | awk '{ print tolower($1) }')
  fi
done

# Get task specific resources
. $EXPDIR/config.resources fcst
export domains_stack_size="16000000"


if [ $DONST = "YES" ]; then
    . $EXPDIR/config.nsst
fi

export print_esmf=".false."
export esmf_profile=".false."

#######################################################################
# COUPLING COMPONENTS
export OCN_model="mom6"
export ICE_model="cice6"
export WAV_model="ww3"
export CHM_model="gocart"

# cpl defaults

export cpl=".false."
export cplflx=".false."
export cplice=".false."
export cplchm=".false."
export cplwav=".false."

# cpl changes based on APP

if [ $DO_COUPLED = "YES" ]; then
  export cpl=".true."
fi
if [ $DO_AERO = "YES" ]; then
  export cplchm=".true."
fi
if [ $DO_ICE = "YES" ]; then
  export cplice=".true."
  export cplflx=".true."
fi
if [ $DO_OCN = "YES" ]; then
  export cplflx=".true."
fi
if [ $DO_WAVE = "YES" ]; then
  export cplwav=".true."
fi

#######################################################################
# COUPLING COMPONENTS
export use_coldstart=".false."


#######################################################################

export FORECASTSH="$HOMEgfs/scripts/exglobal_forecast.sh"
export FCSTEXECDIR="$HOMEgfs/exec"
export FCSTEXEC="ufs_model"

#######################################################################
# Model configuration
export TYPE="nh"
export MONO="non-mono"

# Use stratosphere h2o physics
export h2o_phys=".true."

# Options of stratosphere O3 physics reaction coefficients
export new_o3forc="YES"

export gwd_opt=2  

# --GFS.v16 uGWD.v0, used for suite FV3_GFS_v16 and UFS p6 etc
# do_ugwp=T: use unified CGWD and OGWD, and turbulent orographic form drag (TOFD)
# do_ugwp=F: use unified CGWD but old OGWD, TOFD is not uded.
if [ $gwd_opt -eq 1 ]; then
    export knob_ugwp_version=0
    export do_ugwp=".false."
    export do_tofd=".false."
    export launch_level=$(echo "$LEVS/2.35" |bc)
fi


# -- uGWD.v1, for suite FV3_GFS_v17 and FV3_GFS_v17p8b etc
if [ $gwd_opt -eq 2 ]; then

    #--used for UFS p7 and p8a
    #export  knob_ugwp_version=1
    #export  do_ugwp=".false."
    #export  do_tofd=".false."
    #export  do_ugwp_v0=".false."
    #export  do_ugwp_v1=".true."
    #export  do_ugwp_v0_orog_only=".false."
    #export  do_ugwp_v0_nst_only=".false."
    #export  do_gsl_drag_ls_bl=".true."
    #export  do_gsl_drag_ss=".true."
    #export  do_gsl_drag_tofd=".false."
    #export  do_ugwp_v1_orog_only=".false."
  
    #--used for UFS p8b 
    export knob_ugwp_version=0
    export do_ugwp=".false."
    export do_tofd=".false."
    export do_ugwp_v0=".true."
    export do_ugwp_v1=".false."
    export do_ugwp_v0_orog_only=".false."
    export do_ugwp_v0_nst_only=".false."
    export do_gsl_drag_ls_bl=".false."
    export do_gsl_drag_ss=".true."
    export do_gsl_drag_tofd=".false."
    export do_ugwp_v1_orog_only=".false."
    export launch_level=$(echo "$LEVS/2.35" |bc)

    #--used for GSL suite
##JKH    export knob_ugwp_version=0
##JKH    export do_ugwp=".false."
##JKH    export do_tofd="true."
##JKH    export do_ugwp_v0=".true."
##JKH    export do_ugwp_v1=".false."
##JKH    export do_ugwp_v0_orog_only=".false."
##JKH    export do_ugwp_v0_nst_only=".false."
##JKH    export do_gsl_drag_ls_bl=".false."
##JKH    export do_gsl_drag_ss=".true."
##JKH    export do_gsl_drag_tofd=".false."
##JKH    export do_ugwp_v1_orog_only=".false."
##JKH    export launch_level=$(echo "$LEVS/2.35" |bc)
fi




# Sponge layer settings
export tau=10.0
export rf_cutoff=7.5e2
export d2_bg_k1=0.20
### JKH
if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" ]] ; then
   export d2_bg_k2=0.15               ###  JKH - 10dec
   export dz_min=2
   export dt_inner=40.                            ### JKH - 10dec
else
   export d2_bg_k2=0.04
   export dz_min=6
fi
if [ $LEVS = "128" ]; then export n_sponge=42; fi   #127 layer
if [ $LEVS = "65" ]; then
  if [ "CCPP_SUITE" = "FV3_RAP_cires_ugwp" -o "CCPP_SUITE" = "FV3_RAP_noah_sfcdiff_unified_ugwp" ]; then 
    export n_sponge=23
  else
    export n_sponge=42
  fi
fi
if [ $LEVS = "128" -a "$CDUMP" = "gdas" ]; then
   export tau=5.0
   export rf_cutoff=1.0e3
   export d2_bg_k1=0.20
   export d2_bg_k2=0.0
fi

# PBL/turbulence schemes
export hybedmf=".false."
if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" || "$CCPP_SUITE" == "FV3_GFS_v16_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_gf_mynn" ]] ; then
   export satmedmf=".false."
   export isatmedmf=0
   if [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_gf_mynn" ]] ; then 
     export shal_cnv=".false."       
   else
     export shal_cnv=".true."       
   fi
   export do_mynnedmf=".true."     
   if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" ]] ; then 
     export do_mynnsfclay=".true."
   else
     export do_mynnsfclay=".false."
   fi
   export icloud_bl=1        
   export bl_mynn_tkeadvect=.true. 
   export bl_mynn_edmf=1        
   export bl_mynn_edmf_mom=1
else
   export satmedmf=".true."   
   export isatmedmf=1        
fi

tbf=""
if [ $satmedmf = ".true." ]; then tbf="_satmedmf" ; fi

# Radiation options 
export IAER=1011    ; #spectral band mapping method for aerosol optical properties
export iovr_lw=3    ; #de-correlation length cloud overlap method (Barker, 2008) 
export iovr_sw=3    ; #de-correlation length cloud overlap method (Barker, 2008) 
export iovr=3       ; #de-correlation length cloud overlap method (Barker, 2008) 
export icliq_sw=2   ; #cloud optical coeffs from AER's newer version v3.9-v4.0 for hu and stamnes
export isubc_sw=2
export isubc_lw=2

# RRTMGP radiation scheme
export  do_RRTMGP=.false.
export  doGP_cldoptics_LUT=.false.
export  doGP_lwscat=.false.

# LSM configuration
# NoahMP only
export iopt_sfc="3"
export iopt_trs="2"

# Convection Options: 2-SASAS, 3-GF
if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_gf_mynn" ]] ; then
    export imfdeepcnv=3
    export imfshalcnv=-1              ## JKH - no shallow GF
elif [[ "$CCPP_SUITE" == "FV3_GFS_v16_gf" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_gf" ]] ; then 
    export imfdeepcnv=3
    export imfshalcnv=3              
else
    export imfdeepcnv=2
    if [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_mynn" ]] ; then 
      export imfshalcnv=-1
    else
      export imfshalcnv=2
    fi
fi

# Microphysics configuration
export dnats=0
export cal_pre=".true."
export do_sat_adj=".false."
export random_clds=".true."

if [ $imp_physics -eq 99 ]; then # ZhaoCarr
    export ncld=1
    export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_zhaocarr${tbf}"
    export nwat=2

elif [ $imp_physics -eq 6 ]; then # WSM6
    export ncld=2
    export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_wsm6${tbf}"
    export nwat=6

elif [ $imp_physics -eq 8 ]; then # Thompson
    export nwat=6
    export cal_pre=".false."
    export random_clds=".false."
    export effr_in=".true."
    export ttendlim="-999"
    export dddmp=0.1
    export d4_bg=0.12
    if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" || "$CCPP_SUITE" == "FV3_GFS_v16_thompson" ]] ; then
        export ncld=5
        export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_thompson_aero_tke"
        export ltaerosol=.true.                  
        export lradar=.true.         
    
        ## GSL namelist changes
        export vtdm4_nh_nonmono=0.03                   ###  JKH - 10dec
        export nord=3                                  ###  JKH - 10dec
        export dt_inner=40.                            ### JKH - 10dec
        if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]] ; then
          export k_split=6                     
          export n_split=2
        fi

        export kord_tm=-11          ###  JKH - 10dec
        export kord_mt=11           ###  JKH - 10dec
        export kord_wz=11           ###  JKH - 10dec
        export kord_tr=11           ###  JKH - 10dec
        export d_con_nonmono=0.5    ###  JKH - 10dec
        export hord_mt_nh_nonmono=6 ###  JKH - 10dec
        export hord_xx_nh_nonmono=6 ###  JKH - 10dec
    else
        export ncld=2
        if [[ "$CCPP_SUITE" == "FV3_GFS_v17_p8_mynn" || "$CCPP_SUITE" == "FV3_GFS_v17_p8_gf_mynn" ]] ; then
          export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_thompson_aero_tke"
          export ltaerosol=".true."
          export sedi_semi=.false.          ## JKH - 14sep
          export decfl=8                    ## JKH - 14sep
        else
          export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_thompson_noaero_tke"
          export ltaerosol=".false."
          export sedi_semi=.true.          ## JKH - 14sep
          export decfl=10                  ## JKH - 14sep
        fi
        export lradar=".false."
        export dt_inner=$((DELTIM/2))
        if [ $sedi_semi = .true. ]; then export dt_inner=$DELTIM ; fi
        export hord_mt_nh_nonmono=5
        export hord_xx_nh_nonmono=5
        export vtdm4_nh_nonmono=0.02
        export nord=2
    fi

elif [ $imp_physics -eq 11 ]; then # GFDL
    export ncld=5
    if [[ "$CCPP_SUITE" == "FV3_GFS_v16_mynn" ]] ; then
      export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_gfdl_satmedmf"
    else
      export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_gfdl${tbf}"
    fi
    export nwat=6
    export dnats=1
    export cal_pre=".false."
    export do_sat_adj=".true."
    export random_clds=".false."
    export lgfdlmprad=".true."
    export effr_in=".true."
    export reiflag=2

    export hord_mt_nh_nonmono=5
    export hord_xx_nh_nonmono=5
    export vtdm4_nh_nonmono=0.02
    export nord=2
    export d4_bg=0.12
    export dddmp=0.1

else
    echo "Unknown microphysics option, ABORT!"

fi

# Stochastic physics
export DO_SPPT=${DO_SPPT:-"NO"}
export DO_SKEB=${DO_SKEB:-"NO"}
export DO_SHUM=${DO_SHUM:-"NO"}
export DO_LAND_PERT=${DO_LAND_PERT:-"NO"}
export DO_CA=${DO_CA:-"YES"}
export DO_OCN_SPPT=${DO_OCN_SPPT:-"NO"}
export DO_OCN_PERT_EPBL=${DO_OCN_PERT_EPBL:-"NO"}

#coupling settings
export FRAC_GRID=".true."
export cplmode="nems_frac"
export psm_bc="1"

export min_lakeice="0.15"
export min_seaice=${min_seaice:-"0.15"}
export use_cice_alb=${use_cice_alb:-".false."}

export FSICL="0"
export FSICS="0"

#---------------------------------------------------------------------

# ideflate: netcdf zlib lossless compression (0-9): 0 no compression
# nbits: netcdf lossy compression level (0-32): 0 lossless
export ideflate=1
export nbits=14
export ishuffle=0
# compression for RESTART files written by FMS 
export shuffle=1
export deflate_level=1

#---------------------------------------------------------------------
# Disable the use of coupler.res; get model start time from model_configure
export USE_COUPLER_RES="NO"

if [[ "$CDUMP" == "gdas" ]] ; then # GDAS cycle specific parameters

    # Variables used in DA cycling
    if [ $QUILTING = ".true." -a $OUTPUT_GRID = "gaussian_grid" ]; then
        if [[ "$CCPP_SUITE" == "FV3_RAP_cires_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_unified_ugwp" || "$CCPP_SUITE" == "FV3_RAP_noah_sfcdiff_ugwpv1" ]] ; then
          export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da_gsl"
        else
          export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da"
        fi
    else
        export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_da_orig"
    fi

    # Write restart files, where $number is current model start time. 
    # restart_interval:        $number
    #    number=0, writes out restart files at the end of forecast. 
    #    number>0, writes out restart files at the frequency of $number and at the end of forecast.
    # restart_interval:        "$number -1"
    #    writes out restart files only once at $number forecast hour.
    # restart_interval:        "$number1 $number2 $number3 ..."
    #    writes out restart file at the specified forecast hours 
    export restart_interval=${restart_interval:-6}

    # For IAU, write restarts at beginning of window also
    if [ $DOIAU = "YES" ]; then
       export restart_interval="3 6"
    fi

    # Choose coupling with wave
    if [ $DO_WAVE = "YES" ]; then export cplwav=".true." ; fi

    # Turn on dry mass adjustment in GDAS
    export adjust_dry_mass=".true."

elif [[ "$CDUMP" == "gfs" ]] ; then # GFS cycle specific parameters

    # Write more variables to output
    if [ $QUILTING = ".true." -a $OUTPUT_GRID = "gaussian_grid" ]; then
        if [ $CCPP_SUITE = "FV3_RAP_cires_ugwp" ]; then
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_gsl_ruc"
        elif [ $CCPP_SUITE = "FV3_RAP_noah_sfcdiff_unified_ugwp" ]; then
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_gsl"
        else
            export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table"
        fi
    else
        export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_orig"
    fi

    # Write gfs restart files to rerun fcst from any break point         
    export restart_interval_gfs=${restart_interval_gfs:-0}
    if [ $restart_interval_gfs -le 0 ]; then
        #JKH export restart_interval="$FHMAX_GFS"
        export restart_interval=0
    else
        rst_list=""
        IAU_OFFSET=${IAU_OFFSET:-0}
        [[ $DOIAU = "NO" ]] && export IAU_OFFSET=0
        xfh=$((restart_interval_gfs+(IAU_OFFSET/2)))
        while [ $xfh -le $FHMAX_GFS ]; do
          rst_list="$rst_list $xfh"
          xfh=$((xfh+restart_interval_gfs))
        done
        export restart_interval="$rst_list"
    fi

    if [ $DO_AERO = "YES" ]; then
        # Make sure a restart file is written at the cadence time
        if [[ ! "${restart_interval[*]}" =~ "$STEP_GFS"  ]]; then
            export restart_interval="$STEP_GFS $restart_interval"
        fi
    fi
    
    # Choose coupling with wave
    if [ $DO_WAVE = "YES" -a "$WAVE_CDUMP" != "gdas" ]; then 
        export cplwav=".true."
    fi

    # Turn off dry mass adjustment in GFS
    export adjust_dry_mass=".false."

    # Write each restart file in 16 small files to save time
    if [ $CASE = C768 ]; then
      export io_layout="4,4"
    else
      export io_layout="1,1"
    fi

fi

if [[ $DO_COUPLED = "YES" ]] ; then # coupled model
    export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_cpl"
fi

if [ $DO_AERO = "YES" ]; then # temporary settings for aerosol coupling
    export AERO_DIAG_TABLE="${AERO_DIAG_TABLE:-$HOMEgfs/parm/parm_fv3diag/diag_table.aero}"
    export AERO_FIELD_TABLE="${AERO_FIELD_TABLE:-$HOMEgfs/parm/parm_fv3diag/field_table.aero}"
    export AERO_EMIS_FIRE=$( echo "${AERO_EMIS_FIRE:-none}" | awk '{ print tolower($1) }' )
    export AERO_CONFIG_DIR="${AERO_CONFIG_DIR:-$HOMEgfs/parm/chem}"
    export AERO_INPUTS_DIR="${AERO_INPUTS_DIR:-}"
    export fscav_aero="${aero_conv_scav_factors:-${fscav_aero}}"
    export dnats_aero="${aero_diag_tracers:-0}"
fi

# Remember config.efcs will over-ride these values for ensemble forecasts
# if these variables are re-defined there.
# Otherwise, the ensemble forecast will inherit from config.fcst

echo "END: config.fcst"
